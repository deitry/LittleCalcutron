#define BOOST_TEST_MAIN
#define BOOST_TEST_DYN_LINK

#include <boost/test/unit_test.hpp>

// Заведомо верный тест. Просто чтобы убедиться, что всё работает
BOOST_AUTO_TEST_CASE(SimpleTest)
{
	BOOST_CHECK(1==1);
}

// Вещи, которые подлежат тестированию:
// - readToken()
// Чтение отдельного токена. Без вопросов, подлежит тестированию.

// - parse()
// распарсить строку в дерево. Зависит от readToken. Чтобы убедиться в правильности выполнения функции, по-хорошему следует сравнивать конечное дерево с заранее составленным.

// - IToken->get()
// По-хорошему, надо убедиться, что каждый производный от IToken класс возвращает именно то, что должен возвращать. На данный момент
// производными классами являются значения, операторы и выражения.
// Чтобы прототестировать get() изолированно от всех других операций, потребуется для каждого тестового случая создавать дерево.


// Поскольку сами функции get() несложные, ошибки заметны сразу,
// а строить деревья для каждого отдельного случая тестирования parse() слишком накладно для маленького проекта,
// будем тестировать их вместе в рамках calculate()

// - calculate()
// Всё целиком. Зависит по сути от parse() и get(). Если они работают правильно, то никаких проблем быть не должно
